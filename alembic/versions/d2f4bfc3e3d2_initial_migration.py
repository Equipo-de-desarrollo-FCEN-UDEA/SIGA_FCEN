"""initial migration

Revision ID: d2f4bfc3e3d2
Revises: 
Create Date: 2024-09-25 16:59:10.362265

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd2f4bfc3e3d2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('academic_council_type',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('academic_unit_type',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('administrative_type',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('professor_type',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('program_type',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('rol',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('scope', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('identification_type', sa.Enum('PASAPORTE', 'TARJETA_DE_IDENTIDAD', 'CEDULA_CIUDADANIA', 'CEDULA_EXTRANJERIA', name='identificationtype'), nullable=False),
    sa.Column('identification_number', sa.String(length=10), nullable=True),
    sa.Column('phone', sa.String(length=10), nullable=True),
    sa.Column('hashed_password', sa.String(length=300), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('academic_unit',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('academic_unit_type_id', sa.Uuid(), nullable=True),
    sa.Column('academic_unit_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_unit_id'], ['academic_unit.id'], ),
    sa.ForeignKeyConstraint(['academic_unit_type_id'], ['academic_unit_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_rol',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('rol_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['rol_id'], ['rol.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'rol_id')
    )
    op.create_table('academic_council',
    sa.Column('academic_unit_id', sa.Uuid(), nullable=True),
    sa.Column('academic_council_type_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_council_type_id'], ['academic_council_type.id'], ),
    sa.ForeignKeyConstraint(['academic_unit_id'], ['academic_unit.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('administrative',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('academic_unit_id', sa.Uuid(), nullable=True),
    sa.Column('administrative_type_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_unit_id'], ['academic_unit.id'], ),
    sa.ForeignKeyConstraint(['administrative_type_id'], ['administrative_type.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('professor',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('academic_unit_id', sa.Uuid(), nullable=True),
    sa.Column('professor_type_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_unit_id'], ['academic_unit.id'], ),
    sa.ForeignKeyConstraint(['professor_type_id'], ['professor_type.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('program',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('academic_unit_id', sa.Uuid(), nullable=True),
    sa.Column('program_type_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_unit_id'], ['academic_unit.id'], ),
    sa.ForeignKeyConstraint(['program_type_id'], ['program_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('represent_academic_unit',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('academic_unit_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_unit_id'], ['academic_unit.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'academic_unit_id')
    )
    op.create_table('research_group',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('academic_unit_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_unit_id'], ['academic_unit.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('student',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('program_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['program_id'], ['program.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('user_academic_council',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('academic_council_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_council_id'], ['academic_council.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'academic_council_id')
    )
    op.create_table('user_research_group',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('research_group_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['research_group_id'], ['research_group.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'research_group_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_research_group')
    op.drop_table('user_academic_council')
    op.drop_table('student')
    op.drop_table('research_group')
    op.drop_table('represent_academic_unit')
    op.drop_table('program')
    op.drop_table('professor')
    op.drop_table('administrative')
    op.drop_table('academic_council')
    op.drop_table('user_rol')
    op.drop_table('academic_unit')
    op.drop_table('user')
    op.drop_table('rol')
    op.drop_table('program_type')
    op.drop_table('professor_type')
    op.drop_table('administrative_type')
    op.drop_table('academic_unit_type')
    op.drop_table('academic_council_type')
    # ### end Alembic commands ###
