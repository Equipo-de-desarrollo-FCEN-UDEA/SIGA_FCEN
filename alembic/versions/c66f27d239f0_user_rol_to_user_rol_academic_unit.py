"""user_rol to user_rol_academic_unit

Revision ID: c66f27d239f0
Revises: b33bb03a0872
Create Date: 2024-10-03 00:06:09.750842

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c66f27d239f0'
down_revision: Union[str, None] = 'b33bb03a0872'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_rol_academic_unit',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('rol_id', sa.Uuid(), nullable=False),
    sa.Column('academic_unit_id', sa.Uuid(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['academic_unit_id'], ['academic_unit.id'], ),
    sa.ForeignKeyConstraint(['rol_id'], ['rol.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'rol_id', 'academic_unit_id')
    )
    op.drop_table('user_academic_unit')
    op.drop_table('user_rol')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_rol',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('rol_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['rol_id'], ['rol.id'], name='user_rol_rol_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='user_rol_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'rol_id', name='user_rol_pkey')
    )
    op.create_table('user_academic_unit',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('academic_unit_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['academic_unit_id'], ['academic_unit.id'], name='user_academic_unit_academic_unit_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='user_academic_unit_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'academic_unit_id', name='user_academic_unit_pkey')
    )
    op.drop_table('user_rol_academic_unit')
    # ### end Alembic commands ###
